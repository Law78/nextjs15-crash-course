name: Azure Deploy

on:
  workflow_dispatch:
    inputs:
      environment:
        type: environment
        description: Select the environment
env:
  BUNDLE_NAME: bundle
  BASE_PATH: "infra/${{ inputs.environment }}"

permissions:
  id-token: write
  contents: read

jobs:
  plan:
    runs-on: ubuntu-latest
    outputs:
      terraform_version: "1.5.7"
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - uses: hashicorp/setup-terraform@a1502cd9e758c50496cc9ac5308c4843bcd56d36 # v3.0.0
        name: Setup Terraform
        with:
          terraform_version: "1.5.7"

      - uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      - name: Terraform Init
        working-directory: ${{ env.BASE_PATH }}
        run: |
          terraform init

      - name: Terraform Plan
        working-directory: ${{ env.BASE_PATH }}
        env:
          TF_VAR_azure_subscription_id: ${{ vars.AZURE_SUBSCRIPTION_ID }}
          TF_VAR_environment: ${{ inputs.environment }}
        run: |
          terraform plan -no-color -out=tfplan-${{ github.sha }}

      # Salva tutto il contesto di Terraform
      - name: Tar Terraform Directory
        working-directory: ${{ env.BASE_PATH }}
        run: |
          tar -czf terraform-context.tar.gz .terraform .terraform.lock.hcl tfplan-${{ github.sha }}

      - name: Upload Terraform Context
        uses: actions/upload-artifact@v4
        with:
          name: terraform-context
          path: ${{ env.BASE_PATH }}/terraform-context.tar.gz
          retention-days: 1

  apply:
    needs: [plan]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - uses: hashicorp/setup-terraform@a1502cd9e758c50496cc9ac5308c4843bcd56d36 # v3.0.0
        name: Setup Terraform
        with:
          terraform_version: ${{ needs.plan.outputs.terraform_version }}

      - name: Azure Login
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      - name: Download Terraform Context
        uses: actions/download-artifact@v4
        with:
          name: terraform-context
          path: ${{ env.BASE_PATH }}

      # Ripristina il contesto di Terraform
      - name: Extract Terraform Context
        working-directory: ${{ env.BASE_PATH }}
        run: |
          tar -xzf terraform-context.tar.gz

      - name: Terraform Apply
        working-directory: ${{ env.BASE_PATH }}
        env:
          TF_VAR_azure_subscription_id: ${{ vars.AZURE_SUBSCRIPTION_ID }}
          TF_VAR_environment: ${{ inputs.environment }}
        run: |
          terraform apply tfplan-${{ github.sha }}
