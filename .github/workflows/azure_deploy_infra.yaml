name: Azure Deploy

on:
  workflow_dispatch:
    inputs:
      environment:
        type: environment
        description: Select the environment

env:
  BUNDLE_NAME: bundle
  BASE_PATH: "infra/${{ inputs.environment }}"

permissions:
  id-token: write
  contents: read

jobs:
  plan:
    runs-on: ubuntu-latest
    outputs:
      working_dir: ${{ steps.set-working-directory.outputs.dir }}
      terraform_version: ${{ steps.setup-terraform.outputs.terraform_version }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Terraform
        id: setup-terraform
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: 1.7.5

      - name: Azure Login
        uses: azure/login@v1
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      - name: Terraform Init
        working-directory: ${{ env.BASE_PATH }}
        run: |
          terraform init

      - name: Terraform Plan
        working-directory: ${{ env.BASE_PATH }}
        env:
          TF_VAR_azure_subscription_id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
          TF_VAR_environment: ${{ inputs.environment }}
        run: |
          terraform plan -no-color -out=tfplan-${{ github.sha }}

      - name: Debug Variables
        run: |
          echo "Azure Subscription ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}"

      - name: Check tfplan file
        working-directory: ${{ env.BASE_PATH }}
        run: |
          ls -l tfplan-${{ github.sha }}

      - name: Upload Terraform Plan as Artifact
        uses: actions/upload-artifact@v2
        with:
          name: tfplan
          path: ${{ env.BASE_PATH }}/tfplan-${{ github.sha }}
          if-no-files-found: error
          retention-days: 1

  apply:
    needs: plan
    runs-on: ubuntu-latest
    steps:
      - name: Azure Login
        uses: azure/login@v1
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      - name: Download Terraform Plan as Artifact
        uses: actions/download-artifact@v2
        with:
          name: tfplan
          path: ${{ env.BASE_PATH }}

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: 1.7.5

      - name: Terraform Apply
        working-directory: ${{ env.BASE_PATH }}
        env:
          TF_VAR_azure_subscription_id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
          TF_VAR_environment: ${{ inputs.environment }}
        run: |
          terraform apply -auto-approve tfplan-${{ github.sha }}

      - name: Remove Terraform Lock
        working-directory: ${{ env.BASE_PATH }}
        run: |
          rm -f .terraform.lock.hcl
